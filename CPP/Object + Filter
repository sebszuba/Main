#include <iostream>
#include <iomanip> //allows use of setprecision
#include <string> //allows use of strings
#include <string.h>
using namespace std; //allows use of cout 

void firstRow()
{
	cout << "Description" << "  " << "Quantity" << "  " << "Price" << "  " << "Category" << "  " << "Ext. Price" << endl; //display items in seperate rows and columns 
}

void calculateExtPrice() {
	for (int i = 0; i < NUM_PRODUCTS; i++) {
		extendedPrices[i] = quantity[i] * prices[i];
	}
}

void displayAllData(string item[], int quantity[], double price[], string category[]) { //solution for number 2
	firstRow();
	
	cout << setw(10) << item[i] << setw(10) << quantity[i] << setw(10) << fixed << setprecision(2) << price[i] << setw(10) << fixed << setprecision(2) << category[i] << setw(10) << extPrice << endl;
			++i;
	for (int i = 0; i < NUM_PRODUCTS; i++) {

	}
}

void displayDataByQuantity(string item[], int quantity[], double price[], string category[], int amount) //item is description, solution to number 3
{  
	firstRow();
		int i = 0;

		while (i <= 10) 
		{
			if (quantity[i] <= amount) //to filter by quantity
			{
				cout << setw(10) << item[i] << setw(10) << quantity[i] << setw(10) << fixed << setprecision(2) << price[i] << setw(10) << category[i] << setw(10) << fixed << setprecision(2) << extPrice << endl;
			}
			++i;
		}
}

void displayDataByPrice(string item[], int quantity[], double price[], string category[], int amount) //item is description, solution to number 3
{
	firstRow();
	int i = 0;
	double extPrice;

	while (i <= 10)
	{
		if (price[i] <= amount) //to filter by price
		{
			cout << setw(10) << item[i] << setw(10) << quantity[i] << setw(10) << fixed << setprecision(2) << price[i] << setw(10) << category[i] << setw(10) << fixed << setprecision(2) << extPrice << endl;
		}
		++i;
	}
}

void displayFooter(int quantity[], double price[]) {
	int totalQuantity = 0;
	double totalPrice = 0.0;
	double averagePrice = 0.0;

	for (int i = 0; i < 10; ++i) {
		totalQuantity = totalQuantity + quantity[i];
		totalPrice = totalPrice + price[i];
	}


	averagePrice = totalPrice / totalQuantity;

	cout << setw(10) << "Totals:" << setw(10) << totalQuantity << setw(10) << totalPrice << endl;
	cout << setw(10) << "Average:" << setw(10) << averagePrice << endl;
}

int main() //solution for number 1
{
	const int NUM_PRODUCTS = 10;
	string item[NUM_PRODUCTS] = { "Hamburger", "Cheeseburger", "Ribs", "Salad", "Brownie", "Cookie", "Mac & Cheese", "Fish", "Pancakes", "Waffles" };
	string category[NUM_PRODUCTS] = { "Lunch", "Lunch", "Lunch", "Lunch", "Desert", "Desert", "Snack", "Lunch", "Breakfast", "Breakfast" };
	int quantity[NUM_PRODUCTS] = { 2, 1, 3, 1, 4, 5, 2, 1, 2, 2 };
	double price[NUM_PRODUCTS] = { 7.0, 8.5, 12.5, 5.5, 3.0, 2.0, 4.0, 7.0, 6.5, 6.5 };

	cout << "My Product Report" << endl; 
	cout << endl;
	displayAllData(item, quantity, price, category);
	displayFooter(quantity, price);
	cout << "Data filtered by quantity" << endl;
	cin >> amount;
	displayDataByQuantity(item, quantity, price, category, amount);
	cout << "Data filtered by price" << endl;
	cin >> amount;
	displayDataByPrice(item, quantity, price, category, amount);
	return 0;
}
